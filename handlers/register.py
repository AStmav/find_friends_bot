from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from state.register import RegisterState
import re
import os
from utils.database import Database




async def start_register(msg:Message, state:FSMContext):
    db = Database(os.getenv('DATABASE_NAME')) #–ø—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–Ω–µ–µ
    users = db.select_users_id(msg.from_user.id)
    if (users):
        await msg.answer(f"{users[1]} \n  –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
    else:
        await msg.answer(f"–î–∞–≤–∞–π—Ç–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–µ–º—Å—è üìå\n –î–ª—è –Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏ –í–∞—à–µ –∏–º—èüìù")
        await state.set_state(RegisterState.regName)

async def register_name(msg:Message, state:FSMContext):
    await msg.answer(f"–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è {msg.text} \n"
                     f"–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —á—Ç–æ–±—ã –±—ã—Ç—å –Ω–∞ —Å–≤—è–∑–∏ \n"
                     f"‚òéÔ∏è –§–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞: +7xxxxxxxxxx\n\n"
                     f"‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ! –Ø —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∫ —Ñ–æ—Ä–º–∞—Ç—É –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ‚ö†Ô∏è")
    await state.update_data(register_name=msg.text)
    await state.set_state(RegisterState.regPhone)

async def register_phone(msg:Message, state:FSMContext):
    if (re.findall('^\+?[7][-\(]?\d{3}\)?-?\d{3}-?\d{2}-?\d{2}$', msg.text)):
        await state.update_data(register_phone=msg.text)
        reg_data = await state.get_data()
        reg_name = reg_data.get('register_name')
        reg_phone = reg_data.get('register_phone')
        msg_success = f"–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è {reg_name} \n\n  –¢–µ–ª–µ—Ñ–æ–Ω:{reg_phone}"
        await msg.answer(msg_success)
        db = Database(os.getenv('DATABASE_NAME'))
        db.add_user(reg_name,reg_phone,msg.from_user.id)

        await state.clear()

    else:
        await msg.answer(f"–ù–æ–º–µ—Ä —É–∫–∞–∑–∞–Ω –≤ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ")


